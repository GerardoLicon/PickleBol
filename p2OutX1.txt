primClassif subClassif   tokenStr
  1 Int i;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   i
  2 Float pi;
SEPARATOR   n/a          ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   pi
  3 String day;
SEPARATOR   n/a          ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   day
  4    day 
SEPARATOR   n/a          ;
  5    = 
OPERAND     IDENTIFIER   day
  6    "Sunday";
OPERATOR    n/a          =
OPERAND     STRING       Sunday
                               
  7 String name;
SEPARATOR   n/a          ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   name
  8 name = "Anita Goodgrade";
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   name
OPERATOR    n/a          =
OPERAND     STRING       Anita Goodgrade
                                        
  9 String weird;
SEPARATOR   n/a          ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   weird
  10 weird = "\tTX\tTexas\n";
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   weird
OPERATOR    n/a          =
OPERAND     STRING       . TX. Texas. 
                         09  09     0A
  11 String loc;
SEPARATOR   n/a          ;
CONTROL     DECLARE      String
OPERAND     IDENTIFIER   loc
  12 loc = "TX";
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   loc
OPERATOR    n/a          =
OPERAND     STRING       TX
                           
  13 
  14 // numeric stuff
  15 print(">>> Checking datatype results based on left operand");
SEPARATOR   n/a          ;
FUNCTION    BUILTIN      print
SEPARATOR   n/a          (
OPERAND     STRING       >>> Checking datatype results based on left operand
                                                                            
SEPARATOR   n/a          )
  16 pi = 3.14;
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   pi
OPERATOR    n/a          =
OPERAND     FLOAT        3.14
  17 Float area;
SEPARATOR   n/a          ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   area
  18 Float radius2;
SEPARATOR   n/a          ;
CONTROL     DECLARE      Float
OPERAND     IDENTIFIER   radius2
  19 Int radius;
SEPARATOR   n/a          ;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   radius
  20 radius = 8;
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   radius
OPERATOR    n/a          =
OPERAND     INTEGER      8
  21 radius2 = radius ^ 2;  // square the radius
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   radius2
OPERATOR    n/a          =
OPERAND     IDENTIFIER   radius
OPERATOR    n/a          ^
OPERAND     INTEGER      2
  22 print("\t1. area all float");
SEPARATOR   n/a          ;
FUNCTION    BUILTIN      print
SEPARATOR   n/a          (
OPERAND     STRING       . 1. area all float
                         09                 
SEPARATOR   n/a          )
  23 area = pi * radius2;
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   area
OPERATOR    n/a          =
OPERAND     IDENTIFIER   pi
OPERATOR    n/a          *
OPERAND     IDENTIFIER   radius2
  24 print("\tradius="
SEPARATOR   n/a          ;
FUNCTION    BUILTIN      print
SEPARATOR   n/a          (
  25       ,  radius
OPERAND     STRING       . radius=
                         09       
SEPARATOR   n/a          ,
  26       ,  "radius2="
OPERAND     IDENTIFIER   radius
SEPARATOR   n/a          ,
  27       ,  radius2
OPERAND     STRING       radius2=
                                 
SEPARATOR   n/a          ,
  28       ,  "area="
OPERAND     IDENTIFIER   radius2
SEPARATOR   n/a          ,
  29       ,  area);
OPERAND     STRING       area=
                              
SEPARATOR   n/a          ,
OPERAND     IDENTIFIER   area
SEPARATOR   n/a          )
  30 Int irad2;
SEPARATOR   n/a          ;
CONTROL     DECLARE      Int
OPERAND     IDENTIFIER   irad2
  31 irad2 = radius ^ 2;
SEPARATOR   n/a          ;
OPERAND     IDENTIFIER   irad2
OPERATOR    n/a          =
OPERAND     IDENTIFIER   radius
OPERATOR    n/a          ^
OPERAND     INTEGER      2
  32 print("\x2. area using int radius as left operand");
SEPARATOR   n/a          ;
pickle.ScannerException: Line 32 Invalid escape character: 'x', File: p2InputX1.txt
	at pickle.Scanner.correctString(Scanner.java:164)
	at pickle.Scanner.getToken(Scanner.java:245)
	at pickle.Scanner.getNext(Scanner.java:537)
	at pickle.Pickle.main(Pickle.java:36)
